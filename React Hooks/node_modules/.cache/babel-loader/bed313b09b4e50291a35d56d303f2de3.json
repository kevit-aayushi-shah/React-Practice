{"ast":null,"code":"var _jsxFileName = \"/home/kevit/Documents/React Learning/useEffect/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PASSWORD\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim() > 6\n    };\n  }\n\n  if (action.type === \"PASSWORD_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim() > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_PASSWORD\",\n      val: event.target.value\n    });\n    setFormIsValid(passwordState.isValid && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"PASSWORD_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"9xRCRB+y2j2blHJW+c94CPLyuMQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","passwordIsValid","actions","btn"],"sources":["/home/kevit/Documents/React Learning/useEffect/src/components/Login/Login.js"],"sourcesContent":["import React, { useState , useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer=(state,action)=>{\n  if(action.type===\"USER_INPUT\"){\n    return {value:action.val , isValid:action.val.includes('@')}\n\n  }\n  if(action.type===\"INPUT_BLUR\"){\n    return {value:state.value,isValid:state.value.includes(\"@\")}\n  }\n  return {value:\"\" , isValid:false}\n\n}\nconst passwordReducer=(state,action)=>{\n  if(action.type===\"USER_PASSWORD\"){\n    return {value:action.val ,isValid:action.val.trim()>6}\n  }\n  if(action.type===\"PASSWORD_BLUR\"){\n    return {value:state.value ,isValid:state.value.trim()>6}\n  }\n  return {value:\"\" , isValid:false}\n\n}\n\n\nconst Login = (props) => {\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState,dispatchEmail]=useReducer(emailReducer,{\n    value:\"\",\n    isValid: null\n  })\n\n  const [passwordState,dispatchPassword]=useReducer(passwordReducer,{\n    value:'',\n    isValid:null\n  })\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type:\"USER_INPUT\", val:event.target.value})\n  \n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type:\"USER_PASSWORD\", val:event.target.value})\n\n    setFormIsValid(\n      passwordState.isValid && emailState.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type:'INPUT_BLUR'})\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type:\"PASSWORD_BLUR\"})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}